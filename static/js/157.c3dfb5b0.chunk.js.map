{"version":3,"file":"static/js/157.c3dfb5b0.chunk.js","mappings":"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","sources":["pages/ContactList/ContactList.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactList/ContactList.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Modal, Input } from 'antd';\nimport {\n  UserSwitchOutlined,\n  PhoneOutlined,\n  ContactsOutlined,\n} from '@ant-design/icons';\n\nexport const ButtonRedact = styled(Button)`\n  margin-right: 8px;\n  margin-left: auto;\n  color: #008000;\n  background-color: #adff2f;\n  border: none;\n`;\n\nexport const Item = styled.li`\n  background-color: #f5f6f7;\n  padding-left: 10px;\n  border-radius: 7px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const UserIcon = styled(UserSwitchOutlined)`\n  color: #c7c6c6;\n  transform: translateY(60%);\n`;\n\nexport const PhoneIcon = styled(PhoneOutlined)`\n  color: #c7c6c6;\n  transform: translateY(60%);\n`;\n\nexport const InputForm = styled(Input)`\n  height: 40px;\n  font-size: 18px;\n  width: 100%;\n  :nth-child(1) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ModalRedact = styled(Modal)`\n  text-align: center;\n  .ant-modal-content {\n    width: 330px;\n    position: absolute;\n    top: 20%;\n    left: 20%;\n  }\n`;\n\nexport const UserIconList = styled(ContactsOutlined)`\n  margin-right: 8px;\n  color: #008000;\n`;\n\nexport const PhoneiconList = styled(PhoneOutlined)`\n  margin: 0 8px;\n  color: #008000;\n`;\n\nexport const DivName = styled.div`\n  min-width: 220px;\n`;\n\nexport const Title = styled.h2`\n  margin: 20px auto;\n  color: #008000;\n`;\n\nexport const Container = styled.div`\n  padding: 20px 0;\n`;\n","import { Input } from 'antd';\nimport styled from 'styled-components';\n\nexport const WrapperFilter = styled.div`\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled(Input)`\n  height: 40px;\n  width: 230px;\n  padding: 0 10px;\n  font-size: 20px;\n  border: 1px solid #008000;\n  border-radius: 7px;\n  color: #008000;\n`;\n\nexport const FilterP = styled.p`\n  font-weight: 500;\n  margin-bottom: 20px;\n  color: #008000;\n`;\n","import { WrapperFilter, FilterInput, FilterP } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtration } from 'Redux/Contacts/filterSlice';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <WrapperFilter>\n      <FilterP>Find contacts by name</FilterP>\n\n      <FilterInput\n        prefix={<SearchOutlined />}\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(filtration(e.target.value))}\n      />\n    </WrapperFilter>\n  );\n};\n","import styled from 'styled-components';\nimport { Button, Form, Input, Modal } from 'antd';\nimport { PhoneOutlined, UserAddOutlined } from '@ant-design/icons';\n\nexport const FormWrap = styled(Form)`\n  margin: 0 auto;\n`;\n\nexport const AddModalBtn = styled(Button)`\n  width: 100%;\n  height: 35px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  color: #008000;\n  background-color: #adff2f;\n`;\n\nexport const UserIcon = styled(UserAddOutlined)`\n  color: #c7c6c6;\n`;\n\nexport const PhoneIcon = styled(PhoneOutlined)`\n  color: #c7c6c6;\n`;\n\nexport const InputForm = styled(Input)`\n  height: 35px;\n  font-size: 18px;\n  width: 100%;\n`;\n\nexport const AddModal = styled(Modal)`\n  text-align: center;\n  .ant-modal-content {\n    width: 340px;\n    height: 225px;\n    position: absolute;\n    top: 50%;\n    left: 20%;\n  }\n`;\n\nexport const OpenAddModal = styled(Button)`\n  margin: 15px 0;\n  border: none;\n  color: #008000;\n  background-color: #adff2f;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/Contacts/operations';\nimport { useState } from 'react';\nimport {\n  FormWrap,\n  AddModalBtn,\n  UserIcon,\n  PhoneIcon,\n  InputForm,\n  AddModal,\n  OpenAddModal,\n} from './ContactForm.styled';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nexport const ContactForm = () => {\n  const [open, setOpen] = useState(false);\n  const [form] = FormWrap.useForm();\n  const currentContacts = useSelector(state => state.contacts.items);\n  const loader = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n\n  const showModal = () => {\n    form.resetFields();\n    setOpen(true);\n  };\n\n  const submit = value => {\n    const formatTel = () => {\n      const number = value.number;\n      const phoneLength = number.length;\n\n      if (phoneLength < 7) {\n        return `(${number.slice(0, 3)}) ${number.slice(3)}`;\n      }\n\n      return `(${number.slice(0, 3)}) ${number.slice(3, 6)}-${number.slice(\n        6,\n        10\n      )}`;\n    };\n\n    const newContact = { name: value.name, number: formatTel() };\n    const newContactName = newContact.name.toLowerCase();\n\n    if (\n      currentContacts.find(\n        contact => contact.name.toLowerCase() === newContactName\n      )\n    ) {\n      alert(`${newContact.name} is already in contact`);\n    } else {\n      dispatch(addContact(newContact));\n\n      if (!loader) {\n        form.resetFields();\n        setOpen(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <OpenAddModal\n        type=\"default\"\n        onClick={showModal}\n        title=\"add new contact\"\n        size={'large'}\n      >\n        <PlusCircleOutlined />\n        Add contact\n      </OpenAddModal>\n\n      <AddModal\n        footer={null}\n        title=\"Add new contact\"\n        open={open}\n        onCancel={() => setOpen(false)}\n      >\n        <FormWrap\n          form={form}\n          name=\"normal_login\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={submit}\n        >\n          <FormWrap.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Name!',\n                type: 'text',\n              },\n            ]}\n          >\n            <InputForm\n              prefix={<UserIcon />}\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n          </FormWrap.Item>\n\n          <FormWrap.Item\n            name=\"number\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Number!',\n                type: 'phone',\n              },\n            ]}\n          >\n            <InputForm\n              prefix={<PhoneIcon />}\n              type=\"\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            />\n          </FormWrap.Item>\n\n          <FormWrap.Item>\n            <AddModalBtn type=\"default\" htmlType=\"submit\">\n              Add contact\n            </AddModalBtn>\n          </FormWrap.Item>\n        </FormWrap>\n      </AddModal>\n    </>\n  );\n};\n","import {\n  Item,\n  List,\n  ButtonRedact,\n  UserIcon,\n  PhoneIcon,\n  InputForm,\n  ModalRedact,\n  UserIconList,\n  PhoneiconList,\n  DivName,\n  Title,\n  Container,\n} from './ContactList.styled';\n\nimport { Spiner } from 'components/LoadingIndicator';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  deleteContact,\n  redactContatc,\n  fetchContacts,\n} from 'Redux/Contacts/operations';\n\nimport { useEffect, useState } from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Button, Popconfirm } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nexport default function Contactlist() {\n  const [subName, setSubName] = useState('');\n  const [subNumber, setSubNumber] = useState('');\n  const [subId, setSubId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n    dispatch(redactContatc({ id: subId, name: subName, number: subNumber }));\n  };\n\n  const showModal = (name, number, id) => {\n    setSubNumber(number);\n    setSubName(name);\n    setSubId(id);\n    setIsModalOpen(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const { isLoading } = useSelector(state => state.contacts);\n  const contacts = useSelector(state => state.contacts.items);\n  const filterData = useSelector(state => state.filter).toLowerCase();\n\n  const visibleContacts = contacts.filter(subscriber =>\n    subscriber.name.toLowerCase().includes(filterData)\n  );\n\n  return (\n    <section>\n      <Container>\n        <div>\n          {' '}\n          {contacts.length < 1 ? (\n            <Title>Add your first contact</Title>\n          ) : (\n            <Filter />\n          )}\n          <ContactForm />\n          {isLoading && <Spiner />}\n        </div>\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Item key={id}>\n              <DivName>\n                <UserIconList />\n                {name}:\n              </DivName>\n              <PhoneiconList /> {number}\n              <ButtonRedact\n                onClick={() => showModal(name, number, id)}\n                title=\"Edit contact\"\n              >\n                <EditOutlined />\n                Edit\n              </ButtonRedact>\n              <Popconfirm\n                title=\"Are you sure delete this contact?\"\n                okText=\"Yes\"\n                cancelText=\"No\"\n                onConfirm={() => dispatch(deleteContact(id))}\n              >\n                <Button title=\"delete contact\" type=\"primary\" danger>\n                  <DeleteOutlined /> Delete\n                </Button>\n              </Popconfirm>\n            </Item>\n          ))}\n\n          <ModalRedact\n            title=\"Edit a contact\"\n            open={isModalOpen}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <InputForm\n              prefix={<UserIcon />}\n              value={subName}\n              onChange={e => {\n                setSubName(e.target.value);\n              }}\n            />\n            <InputForm\n              prefix={<PhoneIcon />}\n              value={subNumber}\n              onChange={e => {\n                setSubNumber(e.target.value);\n              }}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            />\n          </ModalRedact>\n        </List>\n      </Container>\n    </section>\n  );\n}\n"],"names":["ButtonRedact","styled","Button","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","List","_templateObject3","UserIcon","UserSwitchOutlined","_templateObject4","PhoneIcon","PhoneOutlined","_templateObject5","InputForm","Input","_templateObject6","ModalRedact","Modal","_templateObject7","UserIconList","ContactsOutlined","_templateObject8","PhoneiconList","_templateObject9","DivName","_templateObject10","Title","_templateObject11","Container","_templateObject12","WrapperFilter","FilterInput","FilterP","Filter","dispatch","useDispatch","filter","useSelector","state","_jsxs","children","_jsx","prefix","SearchOutlined","type","value","onChange","e","filtration","target","FormWrap","Form","AddModalBtn","UserAddOutlined","AddModal","OpenAddModal","ContactForm","_useState","useState","_useState2","_slicedToArray","open","setOpen","_FormWrap$useForm","useForm","form","currentContacts","contacts","items","loader","isLoading","_Fragment","onClick","resetFields","title","size","PlusCircleOutlined","footer","onCancel","name","initialValues","remember","onFinish","newContact","number","length","concat","slice","formatTel","newContactName","toLowerCase","find","contact","alert","addContact","rules","required","message","placeholder","pattern","htmlType","Contactlist","subName","setSubName","_useState3","_useState4","subNumber","setSubNumber","_useState5","_useState6","subId","setSubId","_useState7","_useState8","isModalOpen","setIsModalOpen","useEffect","fetchContacts","filterData","visibleContacts","subscriber","includes","Spiner","map","_ref","id","showModal","EditOutlined","Popconfirm","okText","cancelText","onConfirm","deleteContact","danger","DeleteOutlined","onOk","redactContatc"],"sourceRoot":""}